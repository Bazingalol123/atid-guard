@page "/Forget-Password"
@using AuthWithAdmin.Client.ClientHelpers
@using AuthWithAdmin.Shared.AuthSharedModels
@inject HttpClient http

<PageTitle>שכחת סיסמה?</PageTitle>

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <img src="./logo-chat.webp" alt="Logo" class="auth-logo" />
            <h2>שכחת סיסמה?</h2>
        </div>

        <EditForm Model="email" OnValidSubmit="Send" class="auth-form">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="username">כתובת מייל</label>
                <div class="input-group">
                    <InputText id="username" type="email" @bind-Value="email.Email" class="form-control" />
                </div>
                <ValidationMessage For="@(() => email.Email)" class="validation-message" />
            </div>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert @(message.Contains("נשלח") ? "alert-success" : "alert-danger")">@message</div>
            }

            <div class="form-buttons">
                <button type="submit" class="btn btn-primary" disabled="@loading">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    }
                    איפוס סיסמה
                </button>
            </div>

            <div class="auth-footer">
                <span>אין לך חשבון?</span>
                <a href="signup" class="login-link">הרשמה</a>
                <br />
                <a href="login" class="back-link">חזרה להתחברות</a>
            </div>
        </EditForm>
    </div>
</div>


@code {
    [Inject]
    public IAuthenticationService _Auth { get; set; }

    ForgetPasswordDTO email = new ForgetPasswordDTO();
    string message = "";
    bool loading = false;

    async Task Send()
    {
        message = "";
        loading = true;
        string result = await _Auth.ForgetPassword(email);

        switch (result)
        {
            case AuthResults.Success:
                message = $"קישור לאיפוס הסיסמה נשלח לכתובת {email.Email}";
                break;
            case AuthResults.UserNotFound:
                message = "לא קיים משתמש במייל זה";
                break;
            default:
                message = "קרתה תקלה";
                break;
        }

        loading = false;
    }
}